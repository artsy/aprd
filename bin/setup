#!/bin/bash

# This assumes you have general prerequisites installed as by:
# https://github.com/artsy/potential/blob/master/scripts/setup

# Exit if any subcommand fails
set -e

echo "brew update and bundle install..."
brew update
brew bundle --file=- <<EOF
brew 'asdf'
brew 'node'
brew 'postgresql@12', restart_service: true
brew 'rabbitmq', restart_service: true
brew 'yarn'
EOF

echo "fix rabbitmq stomp plugin not able to bind to port 61613..."
if ! grep -Fq "stomp.listeners.tcp.1 = 12345" /usr/local/etc/rabbitmq/rabbitmq; then
  echo "stomp.listeners.tcp.1 = 12345" >> /usr/local/etc/rabbitmq/rabbitmq
  brew services restart rabbitmq
fi

echo "Setup asdf, if required..."
if (! grep 'asdf.sh' ~/.bash_profile)
then
  echo -e "\n. $(brew --prefix asdf)/asdf.sh" >> ~/.bash_profile
  source ~/.bash_profile
fi

echo "Prepare asdf for erlang and elixir..."
# asdf errors if plugin already added
set +e
asdf plugin add erlang
asdf plugin add elixir
set -e
asdf plugin update erlang
asdf plugin update elixir

echo "asdf install erlang..."
# On Mojave (and possibly other Mac versions), you might encounter:
# configure: error: cannot find required auxiliary files: install-sh config.guess config.sub
# Installing autoconf 2.69 solves it.
version=$(sw_vers -productVersion | cut -f1,2 -d'.')
# if Mojave
if [[ $version == '10.14.6' ]]
then
  brew install autoconf@2.69 && \
  brew link --overwrite autoconf@2.69 && \
  autoconf -V
fi
asdf install erlang 23.1.1
asdf local erlang 23.1.1

echo "asdf install elixir..."
asdf install elixir 1.10.3-otp-23
asdf local elixir 1.10.3-otp-23

echo "Prepare mix..."
mix local.hex --force
mix local.rebar --force

echo "Mix install dependencies..."
mix deps.get

echo "Install Node.js dependencies..."
# just use system node/yarn versions, since repo does not specify.
cd assets && yarn install
cd ..

echo "Download .env.shared (for common local dev config)..."
aws s3 cp s3://artsy-citadel/dev/.env.aprd .env.shared

if [ ! -e ".env" ]; then
  echo "Initialize .env from from .env.example (for any custom configuration)..."
  cat .env.example > .env
fi

# print this in red
tput setaf 1
echo "Create database, perform migration, and seed data..."
echo "You will have to CTRL-C and abort Mix !!!!!!!!!!!!!!!!!!!!!!!!"
sleep 3
# revert to black
tput setaf 0
mix ecto.setup

echo "
Done!

These backing-services should be running locally:

postgres, rabbitmq

If you want to customize them, find out where they are installed by:

brew services
brew info <service>
brew --prefix <service>

Your local dev environment is setup based on:

- config files in ./config
- common config in .env.shared (s3://artsy-citadel/dev/.env.aprd)

If those configs do not work for you, you can over-ride in .env.
If your over-ride should be the default, please update those configs.

Please launch staging VPN because the configs point to artsy apps in staging environment.

You should be able to run tests by:

  mix test
  mix test test/apr/views/commerce/commerce_transaction_slack_view_test.exs

To start Phoenix endpoint (at http://localhost:4000), run:

  bin/start.sh
"
